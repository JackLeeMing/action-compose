name: 自动部署新版本到服务器
# 在特定 tag 被 push 以后被触发
on:
  push:
    tags:
      - "v*.*.*"
jobs:
  publish-release:
    runs-on: ubuntu-latest
    steps:
      # checkout 代码
      - uses: actions/checkout@v2
      # 创建 env 文件
      # build docker image
      # start the app
      - name: "创建env文件"
        run: |
          touch .env
          echo ALC_ACCESS_KEY=${{ secrets.ALC_ACCESS_KEY }} >> .env
          echo ALC_SECRET_KEY=${{ secrets.ALC_SECRET_KEY }} >> .env
          echo GITEE_CID=${{ secrets.GITEE_CID }} >> .env
          echo GITEE_SECRET=${{ secrets.GITEE_SECRET }} >> .env
          echo JWT_SECRET=${{ secrets.JWT_SECRET }} >> .env
          echo MONGO_INITDB_ROOT_USERNAME=${{ secrets.MONGO_INITDB_ROOT_USERNAME }} >> .env
          echo MONGO_INITDB_ROOT_PASSWORD=${{ secrets.MONGO_INITDB_ROOT_PASSWORD }} >> .env
          echo MONGO_DB_USERNAME=${{ secrets.MONGO_DB_USERNAME }} >> .env
          echo MONGO_DB_PASSWORD=${{ secrets.MONGO_DB_PASSWORD }} >> .env
          echo REDIS_PASSWORD=${{ secrets.REDIS_PASSWORD }} >> .env
      # 使用阿里云ACR 完成 docker login
      - name: "登录阿里云镜像服务(ACR)"
        uses: aliyun/acr-login@v1
        with:
          login-server: https://registry.cn-chengdu.aliyuncs.com
          region-id: cn-chengdu
          username: "${{ secrets.ACR_USERNAME }}"
          password: "${{ secrets.ACR_PASSWORD }}"
      # 使用正确的github tag 对应ACR tag 进行 docker build
      - name: "构建镜像"
        run: docker build --tag "registry.cn-chengdu.aliyuncs.com/jaquelee/h5brick:${{github.ref_name}}" .
      # 使用标记的 tag 进行 push
      - name: "提交镜像到阿里云的ACR"
        run: docker push registry.cn-chengdu.aliyuncs.com/jaquelee/h5brick:${{github.ref_name}}
      # 查找 docker-compose-online 文件 并且完成版本替换
      - name: "使用 tag 替换 docker-compose 文件中的镜像版本号"
        uses: jacobtomlinson/gha-find-replace@v2
        with:
          find: "{{tag}}"
          replace: ${{github.ref_name}}
          include: "docker-compose-online.yml"
      - run: cat docker-compose-online.yml
      # 拷贝必须文件到一个文件夹，包括 .env, docker-compose-online.yml, mongo-entrypoint
      - name: "准备需要拷贝到服务器的文件"
        run: |
          mkdir lego-backend 
          cp .env docker-compose-online.yml lego-backend
          cp -r mongo-entrypoint lego-backend
          ls -a lego-backend
      # 通过 scp 拷贝必须文件到服务器
      - name: "通过scp拷贝文件到服务器"
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.ALI_HOST }}
          username: ${{ secrets.USER_NAME }}
          password: ${{ secrets.PASS_WORD }}
          source: "lego-backend"
          target: "~"
      # 通过 SSH 登录然后重启服务
      - name: "登录到云服务器并重启服务"
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.ALI_HOST }}
          username: ${{ secrets.USER_NAME }}
          password: ${{ secrets.PASS_WORD }}
          script_stop: true
          # * 登录阿里云 ACR
          # 停止服务 docker-compose down
          # 启动服务 docker-compose up
          # 清理工作
          script: |
            docker login --username=${{secrets.ACR_USERNAME}} --password=${{secrets.ACR_PASSWORD}} registry.cn-chengdu.aliyuncs.com
            cd ~/lego-backend/
            docker-compose -f docker-compose-online.yml down
            docker-compose -f docker-compose-online.yml up -d
            rm -rf .env
            docker logout registry.cn-chengdu.aliyuncs.com
